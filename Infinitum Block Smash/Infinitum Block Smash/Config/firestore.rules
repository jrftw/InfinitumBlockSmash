rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Basic validation functions
    function validateScore(score) {
      return score is number && score >= 0 && score <= 1000000;
    }

    function validateTime(time) {
      return time is number && time >= 0 && time <= 86400;
    }

    function validateLevel(level) {
      return level is number && level >= 1 && level <= 100;
    }

    function validateTimestamp(timestampValue) {
      return timestampValue is number && 
             timestampValue <= request.time.toMillis() &&
             timestampValue >= request.time.toMillis() - duration.value(7, 'd');
    }

    function validateUsername(username) {
      return username is string && username.size() >= 3 && username.size() <= 30;
    }

    // Simple authentication check
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Ownership check
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Leaderboards - public read, authenticated write
    match /classic_leaderboard/{period}/scores/{userId} {
      allow read: if true;
      allow write: if isOwner(userId) && 
                   validateScore(request.resource.data.score) &&
                   validateTimestamp(request.resource.data.timestamp);
    }

    match /classic_timed_leaderboard/{period}/scores/{userId} {
      allow read: if true;
      allow write: if isOwner(userId) && 
                   validateTime(request.resource.data.time) &&
                   validateTimestamp(request.resource.data.timestamp);
    }

    match /achievement_leaderboard/{period}/scores/{userId} {
      allow read: if true;
      allow write: if isOwner(userId) && 
                   validateScore(request.resource.data.points) &&
                   validateTimestamp(request.resource.data.timestamp);
    }

    // Legacy leaderboard collection
    match /leaderboard/{document=**} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // User profiles - authenticated read/write
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
      
      // Subcollections
      match /{subcollection}/{document=**} {
        allow read: if isAuthenticated();
        allow write: if isOwner(userId);
      }
    }

    // Game states
    match /game_states/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Settings
    match /settings/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Devices collection
    match /devices/{deviceId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Security logs
    match /security_logs/{logId} {
      allow read: if false;
      allow write: if isAuthenticated();
    }

    // Public collections
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if false;
    }

    match /bugs/{bugId} {
      allow read: if true;
      allow write: if false;
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 