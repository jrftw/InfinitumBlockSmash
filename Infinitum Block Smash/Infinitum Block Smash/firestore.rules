rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidScore() {
      return (request.resource.data.score is number && request.resource.data.score >= 0) ||
             (request.resource.data.points is number && request.resource.data.points >= 0);
    }
    
    function isValidUsername() {
      return request.resource.data.username is string 
        && request.resource.data.username.size() >= 3 
        && request.resource.data.username.size() <= 20;
    }

    function isValidGameProgress() {
      return request.resource.data.score is number &&
             request.resource.data.level is number &&
             request.resource.data.blocksPlaced is number &&
             request.resource.data.linesCleared is number &&
             request.resource.data.gamesCompleted is number &&
             request.resource.data.perfectLevels is number &&
             request.resource.data.totalPlayTime is number &&
             request.resource.data.highScore is number &&
             request.resource.data.highestLevel is number;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId) && isValidUsername();
      allow update: if isAuthenticated() && isOwner(userId) && isValidUsername();
      allow delete: if isAuthenticated() && isOwner(userId);
      
      // User's game progress
      match /progress/{document=**} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if isAuthenticated() && isOwner(userId) && isValidGameProgress();
      }
      
      // User's achievements
      match /achievements/{achievementId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Classic leaderboard
    match /classic_leaderboard/{timeframe}/scores/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId) && isValidScore();
    }

    // Achievement leaderboard
    match /achievement_leaderboard/{timeframe}/scores/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId) && isValidScore();
    }

    // Game settings
    match /settings/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
    }
  }
} 